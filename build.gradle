buildscript {
    repositories {
        maven { url = "http://maven.dries007.net/content/repositories/ccm/" }
        maven { url = "http://files.minecraftforge.net/maven/" }
        maven { url = "https://libraries.minecraft.net/" }
        mavenCentral()
    }
    
    dependencies {
		classpath 'com.github.abrarsyed.gmcp:GMCP:latest.integration'
    }
}
configurations {
    compile
    deployJars
}
repositories {
    maven { url = "http://maven.dries007.net/content/repositories/ccm/" }
    maven { url = "http://files.minecraftforge.net/maven/" }
    maven { url = "https://libraries.minecraft.net/" }
}

apply plugin: "gmcp"
apply plugin: "maven"

group = "ccm.nucleumOmnium"
version = "2.0.0"

targetCompatibility = 1.6
sourceCompatibility = 1.6

archivesBaseName = 'NucleumOmnium'
minecraft {
	minecraftVersion = "1.6.4"
}
ext.BUILD_NUMBER = System.getenv().BUILD_NUMBER;
if (ext.BUILD_NUMBER == null) ext.BUILD_NUMBER = "0"
version = project.minecraft.minecraftVersion + "-" + version + "." + ext.BUILD_NUMBER

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        expand 'version':project.version, 'mcversion':project.minecraft.minecraftVersion
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'dev-src'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
	classifier = 'dev'
}

artifacts {
	archives jar
    archives sourcesJar
    archives deobfJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: mavenUrl) {
                authentication(userName: mavenUser, password: mavenPassword)
            }
            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
                project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'Usefull core for CCM mods'
                    url 'https://github.com/CCM-Modding/Nucleum-Omnium'

                    scm {
                        url 'https://github.com/CCM-Modding/Nucleum-Omnium'
                        connection 'scm:git:git://github.com/CCM-Modding/Nucleum-Omnium.git'
                        developerConnection 'scm:git:git@github.com:CCM-Modding/Nucleum-Omnium.git'
                    }

                    issueManagement {
                        system 'github'
                        url 'https://github.com/CCM-Modding/Nucleum-Omnium/issues'
                    }

                    licenses  {
                        license  {
                            name 'MIT License'
                            url 'https://raw.github.com/CCM-Modding/Nucleum-Omnium/master/LICENCE'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'Dries007'
                            name 'Dries007'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'CaptainShadows'
                            name 'CaptainShadows'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'Claycorp'
                            name 'Claycorp'
                            roles { role 'architect' }
                        }
                    }
                }
           }
       }
    }
}